{"ast":null,"code":"import \"source-map-support/register\";\nimport uuid from \"uuid\";\nimport * as dynamoDbLib from \"./libs/dynamodb-lib\";\nimport { success, failure } from \"./libs/response-lib\";\nexport async function main(event, context) {\n  const data = JSON.parse(event.body);\n  const params = {\n    TableName: process.env.tableName,\n    Item: {\n      userId: event.requestContext.identity.cognitoIdentityId,\n      drinkId: uuid.v1(),\n      drinkTitle: data.drinkTitle,\n      mainLiquor: data.mainLiquor,\n      glassType: data.glassType,\n      liquorOne: data.liquorOne,\n      liquorOneAmount: data.liquorOneAmount,\n      liquorTwo: data.liquorTwo,\n      liquorTwoAmount: data.liquorTwoAmount,\n      liquorThree: data.liquorThree,\n      liquorThreeAmount: data.liquorThreeAmount,\n      mixerOne: data.mixerOne,\n      mixerOneAmount: data.mixerOneAmount,\n      mixerTwo: data.mixerTwo,\n      mixerTwoAmount: data.mixerTwoAmount,\n      mixerThree: data.mixerThree,\n      mixerThreeAmount: data.mixerThreeAmount,\n      garnish: data.garnish,\n      description: data.description,\n      attachment: data.attachment,\n      createdAt: Date.now()\n    }\n  };\n\n  try {\n    await dynamoDbLib.call(\"put\", params);\n    return success(params.Item);\n  } catch (e) {\n    console.log(e);\n    return failure({\n      status: false\n    });\n  }\n}","map":{"version":3,"sources":["/Users/Gabe_Campbell1/DrinktionaryApp/drinktionary-backend/create.js"],"names":["uuid","dynamoDbLib","success","failure","main","event","context","data","JSON","parse","body","params","TableName","process","env","tableName","Item","userId","requestContext","identity","cognitoIdentityId","drinkId","v1","drinkTitle","mainLiquor","glassType","liquorOne","liquorOneAmount","liquorTwo","liquorTwoAmount","liquorThree","liquorThreeAmount","mixerOne","mixerOneAmount","mixerTwo","mixerTwoAmount","mixerThree","mixerThreeAmount","garnish","description","attachment","createdAt","Date","now","call","e","console","log","status"],"mappings":";AAAA,OAAOA,IAAP,MAAiB,MAAjB;AACA,OAAO,KAAKC,WAAZ,MAA6B,qBAA7B;AACA,SAASC,OAAT,EAAkBC,OAAlB,QAAiC,qBAAjC;AAEA,OAAO,eAAeC,IAAf,CAAoBC,KAApB,EAA2BC,OAA3B,EAAoC;AACzC,QAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWJ,KAAK,CAACK,IAAjB,CAAb;AACA,QAAMC,MAAM,GAAG;AACbC,IAAAA,SAAS,EAAEC,OAAO,CAACC,GAAR,CAAYC,SADV;AAEbC,IAAAA,IAAI,EAAE;AACJC,MAAAA,MAAM,EAAEZ,KAAK,CAACa,cAAN,CAAqBC,QAArB,CAA8BC,iBADlC;AAEJC,MAAAA,OAAO,EAAErB,IAAI,CAACsB,EAAL,EAFL;AAGJC,MAAAA,UAAU,EAAEhB,IAAI,CAACgB,UAHb;AAIJC,MAAAA,UAAU,EAAEjB,IAAI,CAACiB,UAJb;AAKJC,MAAAA,SAAS,EAAElB,IAAI,CAACkB,SALZ;AAMJC,MAAAA,SAAS,EAAEnB,IAAI,CAACmB,SANZ;AAOJC,MAAAA,eAAe,EAAEpB,IAAI,CAACoB,eAPlB;AAQJC,MAAAA,SAAS,EAAErB,IAAI,CAACqB,SARZ;AASJC,MAAAA,eAAe,EAAEtB,IAAI,CAACsB,eATlB;AAUJC,MAAAA,WAAW,EAAEvB,IAAI,CAACuB,WAVd;AAWJC,MAAAA,iBAAiB,EAAExB,IAAI,CAACwB,iBAXpB;AAYJC,MAAAA,QAAQ,EAAEzB,IAAI,CAACyB,QAZX;AAaJC,MAAAA,cAAc,EAAE1B,IAAI,CAAC0B,cAbjB;AAcJC,MAAAA,QAAQ,EAAE3B,IAAI,CAAC2B,QAdX;AAeJC,MAAAA,cAAc,EAAE5B,IAAI,CAAC4B,cAfjB;AAgBJC,MAAAA,UAAU,EAAE7B,IAAI,CAAC6B,UAhBb;AAiBJC,MAAAA,gBAAgB,EAAE9B,IAAI,CAAC8B,gBAjBnB;AAkBJC,MAAAA,OAAO,EAAE/B,IAAI,CAAC+B,OAlBV;AAmBJC,MAAAA,WAAW,EAAEhC,IAAI,CAACgC,WAnBd;AAoBJC,MAAAA,UAAU,EAAEjC,IAAI,CAACiC,UApBb;AAqBJC,MAAAA,SAAS,EAAEC,IAAI,CAACC,GAAL;AArBP;AAFO,GAAf;;AA2BA,MAAI;AACF,UAAM1C,WAAW,CAAC2C,IAAZ,CAAiB,KAAjB,EAAwBjC,MAAxB,CAAN;AACA,WAAOT,OAAO,CAACS,MAAM,CAACK,IAAR,CAAd;AACD,GAHD,CAGE,OAAO6B,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACA,WAAO1C,OAAO,CAAC;AAAE6C,MAAAA,MAAM,EAAE;AAAV,KAAD,CAAd;AACD;AACF","sourcesContent":["import uuid from \"uuid\";\nimport * as dynamoDbLib from \"./libs/dynamodb-lib\";\nimport { success, failure } from \"./libs/response-lib\";\n\nexport async function main(event, context) {\n  const data = JSON.parse(event.body);\n  const params = {\n    TableName: process.env.tableName,\n    Item: {\n      userId: event.requestContext.identity.cognitoIdentityId,\n      drinkId: uuid.v1(),\n      drinkTitle: data.drinkTitle,\n      mainLiquor: data.mainLiquor,\n      glassType: data.glassType,\n      liquorOne: data.liquorOne,\n      liquorOneAmount: data.liquorOneAmount,\n      liquorTwo: data.liquorTwo,\n      liquorTwoAmount: data.liquorTwoAmount,\n      liquorThree: data.liquorThree,\n      liquorThreeAmount: data.liquorThreeAmount,\n      mixerOne: data.mixerOne,\n      mixerOneAmount: data.mixerOneAmount,\n      mixerTwo: data.mixerTwo,\n      mixerTwoAmount: data.mixerTwoAmount,\n      mixerThree: data.mixerThree,\n      mixerThreeAmount: data.mixerThreeAmount,\n      garnish: data.garnish,\n      description: data.description,\n      attachment: data.attachment,\n      createdAt: Date.now()\n    }\n  };\n\n  try {\n    await dynamoDbLib.call(\"put\", params);\n    return success(params.Item);\n  } catch (e) {\n    console.log(e);\n    return failure({ status: false });\n  }\n}\n"]},"metadata":{},"sourceType":"module"}